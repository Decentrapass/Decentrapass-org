{"ast":null,"code":"var _jsxFileName = \"/home/danielmelchor/Documents/CodeProjects/Decentrapass/Website/src/pages/App/EditItem/EditItem.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport AddDataField from \"../AddItem/DataCreate/AddDataField\";\nimport { IF } from \"../../../components/Constants/AddInterfaces\";\nimport { encrypt } from \"../../../functions/encryption\";\nimport { changeItem, changePage, saveItems, saveTx } from \"../../../state/actions\";\nimport { TYPES_INT } from \"../../../components/Constants/constants\";\nimport { Redirect } from \"react-router\";\nimport { formatItem, formatSend } from \"../../../functions/format\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst {\n  create\n} = require(\"ipfs-http-client\");\n\nconst ipfs = create({\n  host: \"ipfs.infura.io\",\n  port: 5001,\n  protocol: \"https\"\n});\n\nconst mapStateToProps = state => {\n  return {\n    currentItem: state.currentItem,\n    items: state.items,\n    password: state.password,\n    contract: state.contract,\n    account: state.account\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    changePage: page => dispatch(changePage(page)),\n    changeItem: item => dispatch(changeItem(item)),\n    saveItems: items => dispatch(saveItems(items)),\n    saveTx: tx => dispatch(saveTx(tx))\n  };\n};\n\nclass EditItem extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      fields: null\n    };\n    this.stateChanger = this.stateChanger.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    var fields = IF[this.props.currentItem.type];\n    var fieldsHtml = Object.keys(fields).map(el => {\n      return /*#__PURE__*/_jsxDEV(AddDataField, {\n        fieldLabel: el,\n        fieldName: IF[this.props.currentItem.type][el][0],\n        fieldType: IF[this.props.currentItem.type][el][1],\n        elementType: this.props.currentItem.type,\n        stateChanger: this.stateChanger,\n        filledWith: this.props.currentItem[el]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this);\n    });\n    this.setState({\n      fields: fieldsHtml\n    });\n  }\n\n  stateChanger(name, val) {\n    if (name === \"number\") val.replace(/ /g, \"\");\n    this.setState({\n      [name]: val\n    }); // Saves input values on state\n  }\n\n  async handleSubmit() {\n    var fields = IF[this.props.currentItem.type];\n    let type = TYPES_INT[this.props.currentItem.type];\n    let data = [];\n\n    for (const i of Object.keys(fields)) {\n      data.push(this.state[i] || \"\"); // If null set to empty string (avoid errors)\n    }\n\n    let prevItems = this.props.items;\n    prevItems[this.props.currentItem.numId] = formatItem(type, data, this.props.currentItem.numId, this.props.currentItem.id);\n    this.props.saveItems(prevItems);\n    this.props.changeItem(prevItems[this.props.currentItem.numId]);\n    let toSend = formatSend(encrypt(data, this.props.password));\n    let res = await ipfs.add(toSend);\n    this.props.contract.methods.editObject(this.props.currentItem.id, res.path).send({\n      from: this.props.account\n    }).on(\"transactionHash\", function (hash) {\n      this.props.saveTx(hash);\n    }.bind(this));\n    this.setState({\n      redirect: /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/app/unlocked\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 31\n      }, this)\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [this.state.redirect, /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col relative bg-green-50 dark:bg-gray-900 w-full h-full justify-end items-center pb-24\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-col justify-start items-center cursor-pointer w-2/3 h-5/6\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"overflow-y-auto w-full mb-10 border border-solid border-gray-400 dark:border-gray-200 p-8 rounded-xl\",\n            children: this.state.fields\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex w-full justify-between dark:text-white\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"bg-red-300 border-2 border-red-500 dark:border-red-600 dark:bg-red-800 py-2 w-48 hover:bg-red-500 dark:hover:bg-red-600 cursor-pointer text-xl\",\n              onClick: () => this.setState({\n                redirect: /*#__PURE__*/_jsxDEV(Redirect, {\n                  to: \"/app/unlocked\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 127,\n                  columnNumber: 31\n                }, this)\n              }),\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"bg-green-300 border-2 border-green-500 dark:border-green-600 dark:bg-green-800 py-2 w-48 hover:bg-green-500 dark:hover:bg-green-600 cursor-pointer text-xl\",\n              onClick: this.handleSubmit,\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditItem);","map":{"version":3,"sources":["/home/danielmelchor/Documents/CodeProjects/Decentrapass/Website/src/pages/App/EditItem/EditItem.js"],"names":["React","Component","connect","AddDataField","IF","encrypt","changeItem","changePage","saveItems","saveTx","TYPES_INT","Redirect","formatItem","formatSend","create","require","ipfs","host","port","protocol","mapStateToProps","state","currentItem","items","password","contract","account","mapDispatchToProps","dispatch","page","item","tx","EditItem","constructor","props","fields","stateChanger","bind","handleSubmit","componentDidMount","type","fieldsHtml","Object","keys","map","el","setState","name","val","replace","data","i","push","prevItems","numId","id","toSend","res","add","methods","editObject","path","send","from","on","hash","redirect","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport AddDataField from \"../AddItem/DataCreate/AddDataField\";\nimport { IF } from \"../../../components/Constants/AddInterfaces\";\nimport { encrypt } from \"../../../functions/encryption\";\nimport {\n  changeItem,\n  changePage,\n  saveItems,\n  saveTx,\n} from \"../../../state/actions\";\nimport { TYPES_INT } from \"../../../components/Constants/constants\";\nimport { Redirect } from \"react-router\";\nimport { formatItem, formatSend } from \"../../../functions/format\";\n\nconst { create } = require(\"ipfs-http-client\");\nconst ipfs = create({\n  host: \"ipfs.infura.io\",\n  port: 5001,\n  protocol: \"https\",\n});\n\nconst mapStateToProps = (state) => {\n  return {\n    currentItem: state.currentItem,\n    items: state.items,\n    password: state.password,\n    contract: state.contract,\n    account: state.account,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    changePage: (page) => dispatch(changePage(page)),\n    changeItem: (item) => dispatch(changeItem(item)),\n    saveItems: (items) => dispatch(saveItems(items)),\n    saveTx: (tx) => dispatch(saveTx(tx)),\n  };\n};\n\nclass EditItem extends Component {\n  state = {\n    fields: null,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.stateChanger = this.stateChanger.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    var fields = IF[this.props.currentItem.type];\n    var fieldsHtml = Object.keys(fields).map((el) => {\n      return (\n        <AddDataField\n          fieldLabel={el}\n          fieldName={IF[this.props.currentItem.type][el][0]}\n          fieldType={IF[this.props.currentItem.type][el][1]}\n          elementType={this.props.currentItem.type}\n          stateChanger={this.stateChanger}\n          filledWith={this.props.currentItem[el]}\n        />\n      );\n    });\n\n    this.setState({ fields: fieldsHtml });\n  }\n\n  stateChanger(name, val) {\n    if (name === \"number\") val.replace(/ /g, \"\");\n    this.setState({ [name]: val }); // Saves input values on state\n  }\n\n  async handleSubmit() {\n    var fields = IF[this.props.currentItem.type];\n    let type = TYPES_INT[this.props.currentItem.type];\n    let data = [];\n\n    for (const i of Object.keys(fields)) {\n      data.push(this.state[i] || \"\"); // If null set to empty string (avoid errors)\n    }\n\n    let prevItems = this.props.items;\n    prevItems[this.props.currentItem.numId] = formatItem(\n      type,\n      data,\n      this.props.currentItem.numId,\n      this.props.currentItem.id\n    );\n    this.props.saveItems(prevItems);\n    this.props.changeItem(prevItems[this.props.currentItem.numId]);\n\n    let toSend = formatSend(encrypt(data, this.props.password));\n\n    let res = await ipfs.add(toSend);\n\n    this.props.contract.methods\n      .editObject(this.props.currentItem.id, res.path)\n      .send({ from: this.props.account })\n      .on(\n        \"transactionHash\",\n        function (hash) {\n          this.props.saveTx(hash);\n        }.bind(this)\n      );\n\n    this.setState({ redirect: <Redirect to=\"/app/unlocked\" /> });\n  }\n\n  render() {\n    return (\n      <>\n        {this.state.redirect}\n        <div className=\"flex flex-col relative bg-green-50 dark:bg-gray-900 w-full h-full justify-end items-center pb-24\">\n          <div className=\"flex flex-col justify-start items-center cursor-pointer w-2/3 h-5/6\">\n            <div className=\"overflow-y-auto w-full mb-10 border border-solid border-gray-400 dark:border-gray-200 p-8 rounded-xl\">\n              {this.state.fields}\n            </div>\n            <div className=\"flex w-full justify-between dark:text-white\">\n              <button\n                className=\"bg-red-300 border-2 border-red-500 dark:border-red-600 dark:bg-red-800 py-2 w-48 hover:bg-red-500 dark:hover:bg-red-600 cursor-pointer text-xl\"\n                onClick={() =>\n                  this.setState({\n                    redirect: <Redirect to=\"/app/unlocked\" />,\n                  })\n                }\n              >\n                Cancel\n              </button>\n              <button\n                className=\"bg-green-300 border-2 border-green-500 dark:border-green-600 dark:bg-green-800 py-2 w-48 hover:bg-green-500 dark:hover:bg-green-600 cursor-pointer text-xl\"\n                onClick={this.handleSubmit}\n              >\n                Save\n              </button>\n            </div>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditItem);\n"]},"metadata":{},"sourceType":"module"}